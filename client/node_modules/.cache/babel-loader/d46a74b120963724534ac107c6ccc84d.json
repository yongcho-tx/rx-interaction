{"ast":null,"code":"var _jsxFileName = \"/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nexport const DrugContext = /*#__PURE__*/React.createContext();\nimport { useDebounce } from '../hooks/debounceHook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DrugProvider(props) {\n  _s();\n\n  const [isLoading, setLoading] = useState(false);\n\n  const prepareSearchQuery = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`;\n    return encodeURI(url);\n  };\n\n  const searchMedName = async () => {\n    if (!searchQuery || searchQuery.trim() === \"\") return;\n    setLoading(true);\n    setNoMedNames(false);\n    const URL = prepareSearchQuery(searchQuery);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      console.log(\"Response: res.data\", res.data);\n      console.log(\"object length: \", Object.keys(res.data.drugGroup).length); // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n\n      Object.keys(res.data.drugGroup).length >= 2 ? setMedNames(res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length - 1].conceptProperties) : setNoMedNames(true);\n    }\n\n    setLoading(false);\n  }; //this prevents the each keystroke of every keyword in the search\n\n\n  useDebounce(searchQuery, 750, searchMedName);\n  console.log(\"selected meds:\", selectedMeds);\n  return /*#__PURE__*/_jsxDEV(DrugContext.Provider, {\n    value: {},\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DrugProvider, \"Q6bH1y8qTBUYIxiSJk/mYJKhees=\", false, function () {\n  return [useDebounce];\n});\n\n_c = DrugProvider;\nexport default DrugProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrugProvider\");","map":{"version":3,"names":["React","axios","DrugContext","createContext","useDebounce","DrugProvider","props","isLoading","setLoading","useState","prepareSearchQuery","query","url","encodeURI","searchMedName","searchQuery","trim","setNoMedNames","URL","res","get","catch","err","console","log","data","Object","keys","drugGroup","length","setMedNames","conceptGroup","conceptProperties","selectedMeds","children"],"sources":["/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios'\nexport const DrugContext = React.createContext()\nimport { useDebounce } from '../hooks/debounceHook'\n\n\nfunction DrugProvider(props) {\n\n    const [isLoading, setLoading] = useState(false)\n\n    const prepareSearchQuery = (query) => {\n        const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`\n\n        return encodeURI(url)\n    }\n\n\n    const searchMedName= async () => {\n        if(!searchQuery || searchQuery.trim() === \"\") return\n\n        setLoading(true)\n        setNoMedNames(false)\n\n        const URL = prepareSearchQuery(searchQuery)\n\n        const res = await axios.get(URL).catch((err) => {\n            console.log(\"Error: \", err)\n        })\n\n        if(res) {\n            console.log(\"Response: res.data\", res.data)\n            console.log(\"object length: \", Object.keys(res.data.drugGroup).length)\n            // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n            Object.keys(res.data.drugGroup).length >= 2 ? setMedNames(res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n            : setNoMedNames(true)\n            }\n        setLoading(false)\n    }\n\n    //this prevents the each keystroke of every keyword in the search\n    useDebounce(searchQuery, 750, searchMedName)\n   \n    console.log(\"selected meds:\", selectedMeds)\n\n\n    return (\n        <DrugContext.Provider\n            value={{\n\n            }}\n        >\n            {props.children}\n        </DrugContext.Provider>\n    )\n}\n\nexport default DrugProvider"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;AACP,SAASC,WAAT,QAA4B,uBAA5B;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAEzB,MAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BC,QAAQ,CAAC,KAAD,CAAxC;;EAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IAClC,MAAMC,GAAG,GAAI,kDAAiDD,KAAM,EAApE;IAEA,OAAOE,SAAS,CAACD,GAAD,CAAhB;EACH,CAJD;;EAOA,MAAME,aAAa,GAAE,YAAY;IAC7B,IAAG,CAACC,WAAD,IAAgBA,WAAW,CAACC,IAAZ,OAAuB,EAA1C,EAA8C;IAE9CR,UAAU,CAAC,IAAD,CAAV;IACAS,aAAa,CAAC,KAAD,CAAb;IAEA,MAAMC,GAAG,GAAGR,kBAAkB,CAACK,WAAD,CAA9B;IAEA,MAAMI,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAUF,GAAV,EAAeG,KAAf,CAAsBC,GAAD,IAAS;MAC5CC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;IACH,CAFiB,CAAlB;;IAIA,IAAGH,GAAH,EAAQ;MACJI,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCL,GAAG,CAACM,IAAtC;MACAF,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,MAAM,CAACC,IAAP,CAAYR,GAAG,CAACM,IAAJ,CAASG,SAArB,EAAgCC,MAA/D,EAFI,CAGJ;;MACAH,MAAM,CAACC,IAAP,CAAYR,GAAG,CAACM,IAAJ,CAASG,SAArB,EAAgCC,MAAhC,IAA0C,CAA1C,GAA8CC,WAAW,CAACX,GAAG,CAACM,IAAJ,CAASG,SAAT,CAAmBG,YAAnB,CAAgCZ,GAAG,CAACM,IAAJ,CAASG,SAAT,CAAmBG,YAAnB,CAAgCF,MAAhC,GAAuC,CAAvE,EAA0EG,iBAA3E,CAAzD,GACEf,aAAa,CAAC,IAAD,CADf;IAEC;;IACLT,UAAU,CAAC,KAAD,CAAV;EACH,CApBD,CAXyB,CAiCzB;;;EACAJ,WAAW,CAACW,WAAD,EAAc,GAAd,EAAmBD,aAAnB,CAAX;EAEAS,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BS,YAA9B;EAGA,oBACI,QAAC,WAAD,CAAa,QAAb;IACI,KAAK,EAAE,EADX;IAAA,UAKK3B,KAAK,CAAC4B;EALX;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;GAhDQ7B,Y;UAkCLD,W;;;KAlCKC,Y;AAkDT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}