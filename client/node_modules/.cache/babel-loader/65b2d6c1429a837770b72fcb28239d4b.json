{"ast":null,"code":"var _jsxFileName = \"/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useDebounce } from '../hooks/debounceHook';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrugContext = /*#__PURE__*/React.createContext();\nconst userAxios = axios.create();\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nfunction DrugProvider(props) {\n  _s();\n\n  const initState = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n    token: localStorage.getItem(\"token\") || \"\",\n    notes: [],\n    errMsg: \"\",\n    selectedMeds: []\n  };\n  console.log(\"initstate: \", initState.selectedMeds);\n  const [userState, setUserState] = useState(initState);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [rxcuiQuery, setRxcuiQuery] = useState(\"\");\n  const [noMedNames, setNoMedNames] = useState(false);\n  const [medNames, setMedNames] = useState([]); // const [selectedMeds, setSelectedMeds] = useState([])\n\n  const [isLoading, setLoading] = useState(false);\n  const [interactions, setInteractions] = useState([]);\n  const [noRxcuis, setNoRxcuis] = useState(false);\n\n  const prepareSearchQuery = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`;\n    return encodeURI(url);\n  };\n\n  const prepareCrossInteraction = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`;\n    return encodeURI(url);\n  };\n\n  const searchMedName = async () => {\n    if (!searchQuery || searchQuery.trim() === \"\") return;\n    setLoading(true);\n    setNoMedNames(false);\n    const URL = prepareSearchQuery(searchQuery);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      // console.log(\"Response: res.data\", res.data)\n      console.log(\"object length: \", Object.keys(res.data.drugGroup).length); // console.log(\"object: \", Object.keys(res.data.drugGroup))\n      // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n\n      const medData = res.data.drugGroup.conceptGroup;\n      Object.keys(res.data.drugGroup).length >= 2 ? setMedNames(medData[medData.length - 1].conceptProperties) : setNoMedNames(true);\n    }\n\n    setLoading(false);\n  };\n\n  const searchCrossInteraction = async () => {\n    if (!rxcuiQuery || rxcuiQuery.trim() === \"\") return;\n    setLoading(true);\n    setNoRxcuis(false);\n    const URL = prepareCrossInteraction(rxcuiQuery);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      console.log(res.data.nlmDisclaimer);\n\n      try {\n        var _res$data, _res$data$fullInterac, _res$data$fullInterac2;\n\n        const rxcuiData = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$fullInterac = _res$data.fullInteractionTypeGroup[0]) === null || _res$data$fullInterac === void 0 ? void 0 : (_res$data$fullInterac2 = _res$data$fullInterac.fullInteractionType[0]) === null || _res$data$fullInterac2 === void 0 ? void 0 : _res$data$fullInterac2.interactionPair[0];\n        const interactionData = rxcuiData.description;\n        console.log(Object.keys(res.data).length); // console.log(\"rxcuiData: \", rxcuiData)\n        // console.log(\"Interaction: \", interactionData)\n\n        if (!res.data.fullInteractionTypeGroup) {\n          setNoRxcuis(true);\n        } else {\n          setInteractions(interactionData);\n        }\n      } catch {\n        setInteractions(\"\");\n      }\n    }\n\n    setLoading(false);\n  };\n\n  function signup(credentials) {\n    axios.post(\"/auth/signup\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  }\n\n  function login(credentials) {\n    axios.post(\"/auth/login\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      getUserNotes();\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  }\n\n  function logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"selectedMeds\");\n    setUserState({\n      user: {},\n      token: \"\",\n      notes: []\n    });\n  }\n\n  function handleAuthErr(errMsg) {\n    setUserState(prevState => ({ ...prevState,\n      errMsg\n    }));\n  }\n\n  function resetAuthErr() {\n    setUserState(prevState => ({ ...prevState,\n      errMsg: \"\"\n    }));\n  } // const addMedList = (newMeds) => {\n  //     axios.post(\"/rxlist\", newMeds)\n  //     .then(res => {\n  //         console.log(\"i am res.data:\", res.data)\n  // const myMedList = [...selectedMeds, newMeds]\n  // setSelectedMeds(prevState => {\n  //     console.log(\"Saved into setSelectedMeds\", res.data)\n  //     return [...prevState, newMeds]\n  // })\n  //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n  //     })\n  //     .catch(err => console.log(err.response.data.errMsg))\n  //     console.log(\"context line 93:\", selectedMeds)   \n  // }\n  //this prevents the each keystroke of every keyword in the search\n\n\n  useDebounce(searchQuery, 750, searchMedName);\n  useDebounce(rxcuiQuery, 750, searchCrossInteraction); //trial useraxios user token route\n\n  const addMedListLocalStorage = newMeds => {\n    if (initState.token) {\n      userAxios.post(\"/api/rxlist\", newMeds).then(res => {\n        console.log(\"addMedListLocalStorage function :\", res.data); // const myMedList = [...selectedMeds, newMeds]\n\n        setUserState(prevState => ({ ...prevState,\n          selectedMeds: [...prevState.selectedMeds, res.data]\n        }));\n      }).catch(err => console.log(err.response.data.errMsg));\n    } else {\n      const newSelected = [...initState.selectedMeds, newMeds];\n      localStorage.setItem(\"selectedMeds\", JSON.stringify(newSelected));\n      setUserState(prevState => ({ ...prevState,\n        selectedMeds: [...prevState.selectedMeds, newSelected]\n      }));\n    }\n  }; //trial getmedlist from localStorage\n\n\n  const getMedList = () => {\n    //    localStorage.getItem(\"selectedMeds\")\n    if (initState.token) {\n      userAxios.get('api/rxlist/user').then(res => {\n        setUserState(prevState => ({ ...prevState,\n          selectedMeds: [res.data]\n        }));\n      }).catch(err => console.log(err.response.data.errMsg));\n    } else {\n      JSON.parse(localStorage.getItem(\"selectedMeds\"));\n    }\n  };\n\n  const deleteMedList = medId => {\n    userAxios.delete(`/api/rxlist/${medId}`).then(res => {\n      console.log(medId);\n      console.log(initState.selectedMeds.filter(med => med._id !== medId));\n      setUserState(prevState => ({ ...prevState,\n        selectedMeds: [...prevState.selectedMeds.filter(meds => meds._id !== meds._id)]\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  };\n\n  function getUserNotes() {\n    userAxios.get(\"/api/notes/user\").then(res => setUserState(prevState => ({ ...prevState,\n      notes: res.data\n    }))).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function addNote(newNote) {\n    userAxios.post(\"api/notes\", newNote).then(res => {\n      setUserState(prevState => ({ ...prevState,\n        notes: [...prevState.notes, res.data]\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  useEffect(() => {\n    JSON.parse(localStorage.getItem(\"selectedMeds\"));\n  }, [initState.selectedMeds]);\n  return /*#__PURE__*/_jsxDEV(DrugContext.Provider, {\n    value: {\n      setSearchQuery,\n      searchQuery,\n      setRxcuiQuery,\n      rxcuiQuery,\n      noMedNames,\n      setNoMedNames,\n      medNames,\n      setMedNames,\n      isLoading,\n      setLoading,\n      getMedList,\n      setInteractions,\n      interactions,\n      deleteMedList,\n      searchCrossInteraction,\n      noRxcuis,\n      setNoRxcuis,\n      addMedListLocalStorage,\n      ...userState,\n      signup,\n      login,\n      logout,\n      addNote,\n      getUserNotes,\n      resetAuthErr,\n      userAxios\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DrugProvider, \"oOdPK9aDlot5NiSzgSiCb/UMvL0=\", false, function () {\n  return [useDebounce, useDebounce];\n});\n\n_c = DrugProvider;\nexport default DrugProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrugProvider\");","map":{"version":3,"names":["useDebounce","React","useEffect","useState","axios","DrugContext","createContext","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","DrugProvider","props","initState","user","JSON","parse","notes","errMsg","selectedMeds","console","log","userState","setUserState","searchQuery","setSearchQuery","rxcuiQuery","setRxcuiQuery","noMedNames","setNoMedNames","medNames","setMedNames","isLoading","setLoading","interactions","setInteractions","noRxcuis","setNoRxcuis","prepareSearchQuery","query","url","encodeURI","prepareCrossInteraction","searchMedName","trim","URL","res","get","catch","err","Object","keys","data","drugGroup","length","medData","conceptGroup","conceptProperties","searchCrossInteraction","nlmDisclaimer","rxcuiData","fullInteractionTypeGroup","fullInteractionType","interactionPair","interactionData","description","signup","credentials","post","then","setItem","stringify","prevUserState","handleAuthErr","response","login","getUserNotes","logout","removeItem","prevState","resetAuthErr","addMedListLocalStorage","newMeds","newSelected","getMedList","deleteMedList","medId","delete","filter","med","_id","meds","addNote","newNote","children"],"sources":["/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js"],"sourcesContent":["import { useDebounce } from '../hooks/debounceHook'\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport const DrugContext = React.createContext()\n\nconst userAxios = axios.create()\n\nuserAxios.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\")\n    config.headers.Authorization = `Bearer ${token}`\n    return config\n})\n\nfunction DrugProvider(props) {\n\n    const initState = { \n        user: JSON.parse(localStorage.getItem(\"user\")) || {}, \n        token: localStorage.getItem(\"token\") || \"\",\n        notes: [],\n        errMsg: \"\",\n        selectedMeds: []\n    }\n    console.log(\"initstate: \", initState.selectedMeds)\n\n    const [userState, setUserState] = useState(initState)\n    const [searchQuery, setSearchQuery] = useState(\"\")\n    const [rxcuiQuery, setRxcuiQuery] = useState(\"\")\n    const [noMedNames, setNoMedNames] = useState(false)\n    const [medNames, setMedNames] = useState([])\n    // const [selectedMeds, setSelectedMeds] = useState([])\n    const [isLoading, setLoading] = useState(false)\n    const [interactions, setInteractions] = useState([])\n    const [noRxcuis, setNoRxcuis] = useState(false)\n\n\n\n    const prepareSearchQuery = (query) => {\n        const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`\n        return encodeURI(url)\n    }\n\n    const prepareCrossInteraction = (query) => {\n        const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`\n        return encodeURI(url)\n    }\n\n    const searchMedName = async () => {\n        if(!searchQuery || searchQuery.trim() === \"\") return\n\n        setLoading(true)\n        setNoMedNames(false)\n\n        const URL = prepareSearchQuery(searchQuery)\n\n        const res = await axios.get(URL).catch((err) => {\n            console.log(\"Error: \", err)\n        })\n\n        if(res) {\n            // console.log(\"Response: res.data\", res.data)\n            console.log(\"object length: \", Object.keys(res.data.drugGroup).length)\n            // console.log(\"object: \", Object.keys(res.data.drugGroup))\n            // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n            const medData = res.data.drugGroup.conceptGroup\n            Object.keys(res.data.drugGroup).length >= 2 ?\n                setMedNames(medData[medData.length-1].conceptProperties)\n            : \n                setNoMedNames(true)\n            }\n        setLoading(false)\n\n    }\n\n    const searchCrossInteraction = async () => {\n\n        if(!rxcuiQuery || rxcuiQuery.trim() === \"\") return\n            setLoading(true)\n            setNoRxcuis(false)\n\n            const URL = prepareCrossInteraction(rxcuiQuery)\n            const res = await axios.get(URL).catch((err) => {\n                console.log(\"Error: \", err)\n            })\n\n        if(res) {\n            console.log(res.data.nlmDisclaimer)\n            try { \n                    const rxcuiData = res.data?.fullInteractionTypeGroup[0]?.fullInteractionType[0]?.interactionPair[0]\n                    const interactionData = rxcuiData.description\n                    console.log(Object.keys(res.data).length)\n                    // console.log(\"rxcuiData: \", rxcuiData)\n                    // console.log(\"Interaction: \", interactionData)\n                    if (!res.data.fullInteractionTypeGroup) {\n                        setNoRxcuis(true)\n                    } else {\n                        setInteractions(interactionData)\n                    }\n                } catch {\n                    setInteractions(\"\")\n                }\n            }   \n        setLoading(false)\n    }\n\n    function signup(credentials) {\n        axios.post(\"/auth/signup\", credentials)\n            .then(res => {\n                const { user, token } = res.data\n                localStorage.setItem(\"token\", token)\n                localStorage.setItem(\"user\", JSON.stringify(user))\n                setUserState(prevUserState => ({\n                    ...prevUserState,\n                    user, token\n                }))\n            })\n            .catch(err => handleAuthErr(err.response.data.errMsg))\n    }\n\n    function login(credentials) {\n        axios.post(\"/auth/login\", credentials)\n            .then(res => {\n                const { user, token } = res.data\n                localStorage.setItem(\"token\", token)\n                localStorage.setItem(\"user\", JSON.stringify(user))\n                getUserNotes()\n                setUserState(prevUserState => ({\n                    ...prevUserState,\n                    user, token\n                }))\n            })\n            .catch(err => handleAuthErr(err.response.data.errMsg))\n    }\n\n    function logout() {\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"user\")\n        localStorage.removeItem(\"selectedMeds\")\n        setUserState({\n            user: {},\n            token: \"\",\n            notes: [],\n        })\n    }\n\n    function handleAuthErr(errMsg) {\n        setUserState(prevState => ({\n            ...prevState,\n            errMsg\n        }))\n    }\n\n    function resetAuthErr() {\n        setUserState(prevState => ({\n            ...prevState,\n            errMsg: \"\"\n        }))\n    }\n\n    // const addMedList = (newMeds) => {\n    //     axios.post(\"/rxlist\", newMeds)\n    //     .then(res => {\n    //         console.log(\"i am res.data:\", res.data)\n            // const myMedList = [...selectedMeds, newMeds]\n            // setSelectedMeds(prevState => {\n            //     console.log(\"Saved into setSelectedMeds\", res.data)\n            //     return [...prevState, newMeds]\n            // })\n            //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n    //     })\n    //     .catch(err => console.log(err.response.data.errMsg))\n    //     console.log(\"context line 93:\", selectedMeds)   \n    // }\n\n\n    //this prevents the each keystroke of every keyword in the search\n    useDebounce(searchQuery, 750, searchMedName)\n    useDebounce(rxcuiQuery, 750, searchCrossInteraction)\n   \n\n    //trial useraxios user token route\n    const addMedListLocalStorage = (newMeds) => {\n        if(initState.token)  {\n            userAxios.post(\"/api/rxlist\", newMeds)\n                .then(res => {\n                    console.log(\"addMedListLocalStorage function :\", res.data)\n                    // const myMedList = [...selectedMeds, newMeds]\n                    setUserState(prevState => ({\n                        ...prevState,\n                        selectedMeds: [...prevState.selectedMeds, res.data]\n                    }))\n                 })\n                .catch(err => console.log(err.response.data.errMsg))\n        } else {\n                const newSelected = [...initState.selectedMeds, newMeds]\n                localStorage.setItem(\"selectedMeds\", JSON.stringify(newSelected))\n                setUserState(prevState => ({\n                    ...prevState,\n                    selectedMeds: [...prevState.selectedMeds, newSelected]\n            }))\n        }\n    }\n\n    //trial getmedlist from localStorage\n    const getMedList = () => {\n    //    localStorage.getItem(\"selectedMeds\")\n        if(initState.token) {\n            userAxios.get('api/rxlist/user' )\n            .then(res => {\n                setUserState(prevState => ({\n                    ...prevState,\n                    selectedMeds: [res.data]\n                }))\n            })\n            .catch(err => console.log(err.response.data.errMsg))\n        } else {\n            JSON.parse(localStorage.getItem(\"selectedMeds\"))\n        }\n    }\n\n    const deleteMedList = (medId) => {\n        userAxios.delete(`/api/rxlist/${medId}`)\n            .then(res => {\n                console.log(medId)\n                console.log(initState.selectedMeds.filter(med => med._id !== medId))\n                setUserState(prevState => ({\n                    ...prevState,\n                    selectedMeds: [...prevState.selectedMeds.filter(meds => meds._id !== meds._id)]\n                }))\n            })\n            .catch(err => console.log(err.response.data.errMsg))\n    }\n\n    function getUserNotes() {\n        userAxios.get(\"/api/notes/user\")\n            .then(res => setUserState(prevState => ({\n                ...prevState,\n                notes: res.data\n            })))\n            .catch(err => console.log(err.response.data.errMsg))\n    }\n\n    function addNote(newNote) {\n        userAxios.post(\"api/notes\", newNote)\n            .then(res => {\n                setUserState(prevState => ({\n                    ...prevState,\n                    notes: [...prevState.notes, res.data]\n                }))\n            })\n            .catch(err => console.log(err.response.data.errMsg))\n    }\n\n    useEffect(() => {\n        JSON.parse(localStorage.getItem(\"selectedMeds\"))\n    }, [initState.selectedMeds])\n\n    return (\n        <DrugContext.Provider\n            value={{\n                setSearchQuery,\n                searchQuery,\n                setRxcuiQuery,\n                rxcuiQuery,\n                noMedNames,\n                setNoMedNames,\n                medNames,\n                setMedNames,\n                isLoading,\n                setLoading,\n                getMedList,\n                setInteractions,\n                interactions,\n                deleteMedList,\n                searchCrossInteraction,\n                noRxcuis,\n                setNoRxcuis,\n                addMedListLocalStorage,\n                ...userState,\n                signup,\n                login,\n                logout,\n                addNote,\n                getUserNotes,\n                resetAuthErr,\n                userAxios\n\n            }}\n        >\n            {props.children}\n        </DrugContext.Provider>\n    )\n}\n\nexport default DrugProvider"],"mappings":"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"},"metadata":{},"sourceType":"module"}