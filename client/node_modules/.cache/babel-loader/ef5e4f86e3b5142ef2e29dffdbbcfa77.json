{"ast":null,"code":"var _jsxFileName = \"/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useDebounce } from '../hooks/debounceHook';\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { UserContext } from '../context/UserProvider.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrugContext = /*#__PURE__*/React.createContext();\nconst userAxios = axios.create();\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nfunction DrugProvider(props) {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [rxcuiQuery, setRxcuiQuery] = useState(\"\");\n  const [noMedNames, setNoMedNames] = useState(false);\n  const [medNames, setMedNames] = useState([]);\n  const [selectedMeds, setSelectedMeds] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [interactions, setInteractions] = useState([]);\n  const [noRxcuis, setNoRxcuis] = useState(false);\n  const [userState, setUserState] = useState(initState);\n\n  const prepareSearchQuery = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`;\n    return encodeURI(url);\n  };\n\n  const prepareCrossInteraction = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`;\n    return encodeURI(url);\n  };\n\n  const searchMedName = async () => {\n    if (!searchQuery || searchQuery.trim() === \"\") return;\n    setLoading(true);\n    setNoMedNames(false);\n    const URL = prepareSearchQuery(searchQuery);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      // console.log(\"Response: res.data\", res.data)\n      console.log(\"object length: \", Object.keys(res.data.drugGroup).length); // console.log(\"object: \", Object.keys(res.data.drugGroup))\n      // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n\n      const medData = res.data.drugGroup.conceptGroup;\n      Object.keys(res.data.drugGroup).length >= 2 ? setMedNames(medData[medData.length - 1].conceptProperties) : setNoMedNames(true);\n    }\n\n    setLoading(false);\n  };\n\n  const searchCrossInteraction = async () => {\n    if (!rxcuiQuery || rxcuiQuery.trim() === \"\") return;\n    setLoading(true);\n    setNoRxcuis(false);\n    const URL = prepareCrossInteraction(rxcuiQuery);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      console.log(res.data.nlmDisclaimer);\n\n      try {\n        var _res$data, _res$data$fullInterac, _res$data$fullInterac2;\n\n        const rxcuiData = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$fullInterac = _res$data.fullInteractionTypeGroup[0]) === null || _res$data$fullInterac === void 0 ? void 0 : (_res$data$fullInterac2 = _res$data$fullInterac.fullInteractionType[0]) === null || _res$data$fullInterac2 === void 0 ? void 0 : _res$data$fullInterac2.interactionPair[0];\n        const interactionData = rxcuiData.description;\n        console.log(Object.keys(res.data).length); // console.log(\"rxcuiData: \", rxcuiData)\n        // console.log(\"Interaction: \", interactionData)\n\n        if (!res.data.fullInteractionTypeGroup) {\n          setNoRxcuis(true);\n        } else {\n          setInteractions(interactionData);\n        }\n      } catch {\n        setInteractions(\"\");\n      }\n    }\n\n    setLoading(false);\n  };\n\n  function signup(credentials) {\n    axios.post(\"/auth/signup\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  }\n\n  function login(credentials) {\n    axios.post(\"/auth/login\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      getUserNotes();\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  }\n\n  function logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"selectedMeds\");\n    setUserState({\n      user: {},\n      token: \"\",\n      notes: []\n    });\n  }\n\n  function handleAuthErr(errMsg) {\n    setUserState(prevState => ({ ...prevState,\n      errMsg\n    }));\n  }\n\n  function resetAuthErr() {\n    setUserState(prevState => ({ ...prevState,\n      errMsg: \"\"\n    }));\n  }\n\n  const addMedList = newMeds => {\n    axios.post(\"/rxlist\", newMeds).then(res => {\n      console.log(\"i am res.data:\", res.data); // const myMedList = [...selectedMeds, newMeds]\n\n      setSelectedMeds(prevState => {\n        console.log(\"Saved into setSelectedMeds\", res.data);\n        return [...prevState, newMeds];\n      }); //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n    }).catch(err => console.log(err.response.data.errMsg));\n    console.log(\"context line 93:\", selectedMeds);\n  }; //this prevents the each keystroke of every keyword in the search\n\n\n  useDebounce(searchQuery, 750, searchMedName);\n  useDebounce(rxcuiQuery, 750, searchCrossInteraction); // const getMedList = () => {\n  //     axios.get(\"/rxlist\" )\n  //     .then(res => {\n  //         setSelectedMeds(res.data)\n  //     })\n  //     .catch(err => console.log(err.response.data.errMsg))\n  // }\n  // const addMedListLocalStorage = (newMeds) => {\n  //     if(token)  {\n  //         axios.post(\"/rxlist\", newMeds)\n  //     .then(res => {\n  //         console.log(\"i am res.data:\", res.data)\n  //         // const myMedList = [...selectedMeds, newMeds]\n  //         setSelectedMeds(prevState => {\n  //             console.log(\"Saved into setSelectedMeds\", res.data)\n  //             return [...prevState, newMeds]\n  //         })\n  //         //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n  //     })\n  //     .catch(err => console.log(err.response.data.errMsg))\n  //     } else {\n  //     const newSelected = [...selectedMeds, newMeds]\n  //     localStorage.setItem(\"selectedMeds\", JSON.stringify(newSelected))\n  //     setSelectedMeds(newSelected)\n  //     }\n  // }\n  //trial useraxios user token route\n\n  const addMedListLocalStorage = newMeds => {\n    if (token) {\n      userAxios.post(\"/api/rxlist\", newMeds).then(res => {\n        console.log(\"addMedListLocalStorage function :\", res.data); // const myMedList = [...selectedMeds, newMeds]\n\n        setSelectedMeds(prevState => {\n          return [...prevState, newMeds];\n        });\n      }).catch(err => console.log(err.response.data.errMsg));\n    } else {\n      const newSelected = [...selectedMeds, newMeds];\n      localStorage.setItem(\"selectedMeds\", JSON.stringify(newSelected));\n      setSelectedMeds(newSelected);\n    }\n  }; //trial getmedlist from localStorage\n\n\n  const getMedList = () => {\n    //    localStorage.getItem(\"selectedMeds\")\n    if (token) {\n      userAxios.get('api/rxlist/user').then(res => {\n        setSelectedMeds(res.data);\n      }).catch(err => console.log(err.response.data.errMsg));\n    } else {\n      JSON.parse(localStorage.getItem(\"selectedMeds\"));\n    }\n  };\n\n  const deleteMedList = medId => {\n    userAxios.delete(`/api/rxlist/${medId}`).then(res => {\n      console.log(medId);\n      console.log(selectedMeds.filter(med => med._id !== medId));\n      setSelectedMeds(prevState => prevState.filter(med => med._id !== medId));\n    }).catch(err => console.log(err.response.data.errMsg));\n  };\n\n  function getUserNotes() {\n    userAxios.get(\"/api/notes/user\").then(res => setUserState(prevState => ({ ...prevState,\n      notes: res.data\n    }))).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function addNote(newNote) {\n    userAxios.post(\"api/notes\", newNote).then(res => {\n      setUserState(prevState => ({ ...prevState,\n        notes: [...prevState.notes, res.data]\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  useEffect(() => {\n    JSON.parse(localStorage.getItem(\"selectedMeds\"));\n  }, [selectedMeds, logout]);\n  return /*#__PURE__*/_jsxDEV(DrugContext.Provider, {\n    value: {\n      setSearchQuery,\n      searchQuery,\n      setRxcuiQuery,\n      rxcuiQuery,\n      noMedNames,\n      setNoMedNames,\n      medNames,\n      setMedNames,\n      setSelectedMeds,\n      selectedMeds,\n      isLoading,\n      setLoading,\n      addMedList,\n      getMedList,\n      setInteractions,\n      interactions,\n      deleteMedList,\n      searchCrossInteraction,\n      noRxcuis,\n      setNoRxcuis,\n      addMedListLocalStorage,\n      ...userState,\n      signup,\n      login,\n      logout,\n      addNote,\n      getUserNotes,\n      resetAuthErr,\n      userAxios\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DrugProvider, \"c4l9I1kcjm+Ww9euqLiqnM+sHHw=\", false, function () {\n  return [useDebounce, useDebounce];\n});\n\n_c = DrugProvider;\nexport default DrugProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrugProvider\");","map":{"version":3,"names":["useDebounce","React","useEffect","useState","useContext","axios","UserContext","DrugContext","createContext","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","DrugProvider","props","searchQuery","setSearchQuery","rxcuiQuery","setRxcuiQuery","noMedNames","setNoMedNames","medNames","setMedNames","selectedMeds","setSelectedMeds","isLoading","setLoading","interactions","setInteractions","noRxcuis","setNoRxcuis","userState","setUserState","initState","prepareSearchQuery","query","url","encodeURI","prepareCrossInteraction","searchMedName","trim","URL","res","get","catch","err","console","log","Object","keys","data","drugGroup","length","medData","conceptGroup","conceptProperties","searchCrossInteraction","nlmDisclaimer","rxcuiData","fullInteractionTypeGroup","fullInteractionType","interactionPair","interactionData","description","signup","credentials","post","then","user","setItem","JSON","stringify","prevUserState","handleAuthErr","response","errMsg","login","getUserNotes","logout","removeItem","notes","prevState","resetAuthErr","addMedList","newMeds","addMedListLocalStorage","newSelected","getMedList","parse","deleteMedList","medId","delete","filter","med","_id","addNote","newNote","children"],"sources":["/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js"],"sourcesContent":["import { useDebounce } from '../hooks/debounceHook'\nimport React, { useEffect, useState, useContext } from 'react'\nimport axios from 'axios'\nimport {UserContext} from '../context/UserProvider.js'\n\nexport const DrugContext = React.createContext()\n\nconst userAxios = axios.create()\n\nuserAxios.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\")\n    config.headers.Authorization = `Bearer ${token}`\n    return config\n})\n\n\nfunction DrugProvider(props) {\n\n    const [searchQuery, setSearchQuery] = useState(\"\")\n    const [rxcuiQuery, setRxcuiQuery] = useState(\"\")\n    const [noMedNames, setNoMedNames] = useState(false)\n    const [medNames, setMedNames] = useState([])\n    const [selectedMeds, setSelectedMeds] = useState([])\n    const [isLoading, setLoading] = useState(false)\n    const [interactions, setInteractions] = useState([])\n    const [noRxcuis, setNoRxcuis] = useState(false)\n    const [userState, setUserState] = useState(initState)\n\n    const prepareSearchQuery = (query) => {\n        const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`\n        return encodeURI(url)\n    }\n\n    const prepareCrossInteraction = (query) => {\n        const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`\n        return encodeURI(url)\n    }\n\n    const searchMedName = async () => {\n        if(!searchQuery || searchQuery.trim() === \"\") return\n\n        setLoading(true)\n        setNoMedNames(false)\n\n        const URL = prepareSearchQuery(searchQuery)\n\n        const res = await axios.get(URL).catch((err) => {\n            console.log(\"Error: \", err)\n        })\n\n        if(res) {\n            // console.log(\"Response: res.data\", res.data)\n            console.log(\"object length: \", Object.keys(res.data.drugGroup).length)\n            // console.log(\"object: \", Object.keys(res.data.drugGroup))\n            // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n            const medData = res.data.drugGroup.conceptGroup\n            Object.keys(res.data.drugGroup).length >= 2 ?\n                setMedNames(medData[medData.length-1].conceptProperties)\n            : \n                setNoMedNames(true)\n            }\n        setLoading(false)\n\n    }\n\n    const searchCrossInteraction = async () => {\n\n        if(!rxcuiQuery || rxcuiQuery.trim() === \"\") return\n            setLoading(true)\n            setNoRxcuis(false)\n\n            const URL = prepareCrossInteraction(rxcuiQuery)\n            const res = await axios.get(URL).catch((err) => {\n                console.log(\"Error: \", err)\n            })\n\n        if(res) {\n            console.log(res.data.nlmDisclaimer)\n            try { \n                    const rxcuiData = res.data?.fullInteractionTypeGroup[0]?.fullInteractionType[0]?.interactionPair[0]\n                    const interactionData = rxcuiData.description\n                    console.log(Object.keys(res.data).length)\n                    // console.log(\"rxcuiData: \", rxcuiData)\n                    // console.log(\"Interaction: \", interactionData)\n                    if (!res.data.fullInteractionTypeGroup) {\n                        setNoRxcuis(true)\n                    } else {\n                        setInteractions(interactionData)\n                    }\n                } catch {\n                    setInteractions(\"\")\n                }\n            }   \n        setLoading(false)\n    }\n\n\n    function signup(credentials) {\n        axios.post(\"/auth/signup\", credentials)\n            .then(res => {\n                const { user, token } = res.data\n                localStorage.setItem(\"token\", token)\n                localStorage.setItem(\"user\", JSON.stringify(user))\n                setUserState(prevUserState => ({\n                    ...prevUserState,\n                    user, token\n                }))\n            })\n            .catch(err => handleAuthErr(err.response.data.errMsg))\n    }\n\n    function login(credentials) {\n        axios.post(\"/auth/login\", credentials)\n            .then(res => {\n                const { user, token } = res.data\n                localStorage.setItem(\"token\", token)\n                localStorage.setItem(\"user\", JSON.stringify(user))\n                getUserNotes()\n                setUserState(prevUserState => ({\n                    ...prevUserState,\n                    user, token\n                }))\n            })\n            .catch(err => handleAuthErr(err.response.data.errMsg))\n    }\n\n    function logout() {\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"user\")\n        localStorage.removeItem(\"selectedMeds\")\n        setUserState({\n            user: {},\n            token: \"\",\n            notes: []\n        })\n    }\n\n    function handleAuthErr(errMsg) {\n        setUserState(prevState => ({\n            ...prevState,\n            errMsg\n        }))\n    }\n\n    function resetAuthErr() {\n        setUserState(prevState => ({\n            ...prevState,\n            errMsg: \"\"\n        }))\n    }\n\n    const addMedList = (newMeds) => {\n        axios.post(\"/rxlist\", newMeds)\n        .then(res => {\n            console.log(\"i am res.data:\", res.data)\n            // const myMedList = [...selectedMeds, newMeds]\n            setSelectedMeds(prevState => {\n                console.log(\"Saved into setSelectedMeds\", res.data)\n                return [...prevState, newMeds]\n            })\n            //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n        })\n        .catch(err => console.log(err.response.data.errMsg))\n        console.log(\"context line 93:\", selectedMeds)   \n    }\n\n\n    //this prevents the each keystroke of every keyword in the search\n    useDebounce(searchQuery, 750, searchMedName)\n    useDebounce(rxcuiQuery, 750, searchCrossInteraction)\n   \n    // const getMedList = () => {\n    //     axios.get(\"/rxlist\" )\n    //     .then(res => {\n    //         setSelectedMeds(res.data)\n    //     })\n    //     .catch(err => console.log(err.response.data.errMsg))\n    // }\n\n\n    // const addMedListLocalStorage = (newMeds) => {\n    //     if(token)  {\n    //         axios.post(\"/rxlist\", newMeds)\n    //     .then(res => {\n    //         console.log(\"i am res.data:\", res.data)\n    //         // const myMedList = [...selectedMeds, newMeds]\n    //         setSelectedMeds(prevState => {\n    //             console.log(\"Saved into setSelectedMeds\", res.data)\n    //             return [...prevState, newMeds]\n    //         })\n    //         //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n    //     })\n    //     .catch(err => console.log(err.response.data.errMsg))\n    \n    //     } else {\n\n    //     const newSelected = [...selectedMeds, newMeds]\n    //     localStorage.setItem(\"selectedMeds\", JSON.stringify(newSelected))\n    //     setSelectedMeds(newSelected)\n  \n    //     }\n    // }\n\n    //trial useraxios user token route\n    const addMedListLocalStorage = (newMeds) => {\n        if(token)  {\n            userAxios.post(\"/api/rxlist\", newMeds)\n                .then(res => {\n                    console.log(\"addMedListLocalStorage function :\", res.data)\n                    // const myMedList = [...selectedMeds, newMeds]\n                    setSelectedMeds(prevState => {\n                        return [...prevState, newMeds]\n                     })\n                })\n                .catch(err => console.log(err.response.data.errMsg))\n        } else {\n                const newSelected = [...selectedMeds, newMeds]\n                localStorage.setItem(\"selectedMeds\", JSON.stringify(newSelected))\n                setSelectedMeds(newSelected)\n        }\n    }\n\n    //trial getmedlist from localStorage\n    const getMedList = () => {\n    //    localStorage.getItem(\"selectedMeds\")\n        if(token) {\n            userAxios.get('api/rxlist/user' )\n            .then(res => {\n                setSelectedMeds(res.data)\n            })\n            .catch(err => console.log(err.response.data.errMsg))\n        } else {\n            JSON.parse(localStorage.getItem(\"selectedMeds\"))\n        }\n    }\n\n    const deleteMedList = (medId) => {\n        userAxios.delete(`/api/rxlist/${medId}`)\n            .then(res => {\n                console.log(medId)\n                console.log(selectedMeds.filter(med => med._id !== medId))\n                setSelectedMeds(prevState => prevState.filter(med => med._id !== medId))\n            })\n            .catch(err => console.log(err.response.data.errMsg))\n    }\n\n    \n\n\n    function getUserNotes() {\n        userAxios.get(\"/api/notes/user\")\n            .then(res => setUserState(prevState => ({\n                ...prevState,\n                notes: res.data\n            })))\n            .catch(err => console.log(err.response.data.errMsg))\n    }\n\n    function addNote(newNote) {\n        userAxios.post(\"api/notes\", newNote)\n            .then(res => {\n                setUserState(prevState => ({\n                    ...prevState,\n                    notes: [...prevState.notes, res.data]\n                }))\n            })\n            .catch(err => console.log(err.response.data.errMsg))\n    }\n\n    useEffect(() => {\n        JSON.parse(localStorage.getItem(\"selectedMeds\"))\n    }, [selectedMeds, logout])\n\n    return (\n        <DrugContext.Provider\n            value={{\n                setSearchQuery,\n                searchQuery,\n                setRxcuiQuery,\n                rxcuiQuery,\n                noMedNames,\n                setNoMedNames,\n                medNames,\n                setMedNames,\n                setSelectedMeds,\n                selectedMeds,\n                isLoading,\n                setLoading,\n                addMedList,\n                getMedList,\n                setInteractions,\n                interactions,\n                deleteMedList,\n                searchCrossInteraction,\n                noRxcuis,\n                setNoRxcuis,\n                addMedListLocalStorage,\n                ...userState,\n                signup, \n                login, \n                logout, \n                addNote, \n                getUserNotes, \n                resetAuthErr,\n                userAxios\n            }}\n        >\n            {props.children}\n        </DrugContext.Provider>\n    )\n}\n\nexport default DrugProvider"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AAEP,MAAMC,SAAS,GAAGJ,KAAK,CAACK,MAAN,EAAlB;AAEAD,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCC,MAAM,IAAI;EACzC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;EACAH,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;EACA,OAAOD,MAAP;AACH,CAJD;;AAOA,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAEzB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAAC6B,SAAD,EAAYC,UAAZ,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACiC,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACmC,SAAD,EAAYC,YAAZ,IAA4BpC,QAAQ,CAACqC,SAAD,CAA1C;;EAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IAClC,MAAMC,GAAG,GAAI,kDAAiDD,KAAM,EAApE;IACA,OAAOE,SAAS,CAACD,GAAD,CAAhB;EACH,CAHD;;EAKA,MAAME,uBAAuB,GAAIH,KAAD,IAAW;IACvC,MAAMC,GAAG,GAAI,+DAA8DD,KAAM,EAAjF;IACA,OAAOE,SAAS,CAACD,GAAD,CAAhB;EACH,CAHD;;EAKA,MAAMG,aAAa,GAAG,YAAY;IAC9B,IAAG,CAACxB,WAAD,IAAgBA,WAAW,CAACyB,IAAZ,OAAuB,EAA1C,EAA8C;IAE9Cd,UAAU,CAAC,IAAD,CAAV;IACAN,aAAa,CAAC,KAAD,CAAb;IAEA,MAAMqB,GAAG,GAAGP,kBAAkB,CAACnB,WAAD,CAA9B;IAEA,MAAM2B,GAAG,GAAG,MAAM5C,KAAK,CAAC6C,GAAN,CAAUF,GAAV,EAAeG,KAAf,CAAsBC,GAAD,IAAS;MAC5CC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;IACH,CAFiB,CAAlB;;IAIA,IAAGH,GAAH,EAAQ;MACJ;MACAI,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,MAAM,CAACC,IAAP,CAAYP,GAAG,CAACQ,IAAJ,CAASC,SAArB,EAAgCC,MAA/D,EAFI,CAGJ;MACA;;MACA,MAAMC,OAAO,GAAGX,GAAG,CAACQ,IAAJ,CAASC,SAAT,CAAmBG,YAAnC;MACAN,MAAM,CAACC,IAAP,CAAYP,GAAG,CAACQ,IAAJ,CAASC,SAArB,EAAgCC,MAAhC,IAA0C,CAA1C,GACI9B,WAAW,CAAC+B,OAAO,CAACA,OAAO,CAACD,MAAR,GAAe,CAAhB,CAAP,CAA0BG,iBAA3B,CADf,GAGInC,aAAa,CAAC,IAAD,CAHjB;IAIC;;IACLM,UAAU,CAAC,KAAD,CAAV;EAEH,CAzBD;;EA2BA,MAAM8B,sBAAsB,GAAG,YAAY;IAEvC,IAAG,CAACvC,UAAD,IAAeA,UAAU,CAACuB,IAAX,OAAsB,EAAxC,EAA4C;IACxCd,UAAU,CAAC,IAAD,CAAV;IACAI,WAAW,CAAC,KAAD,CAAX;IAEA,MAAMW,GAAG,GAAGH,uBAAuB,CAACrB,UAAD,CAAnC;IACA,MAAMyB,GAAG,GAAG,MAAM5C,KAAK,CAAC6C,GAAN,CAAUF,GAAV,EAAeG,KAAf,CAAsBC,GAAD,IAAS;MAC5CC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;IACH,CAFiB,CAAlB;;IAIJ,IAAGH,GAAH,EAAQ;MACJI,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACQ,IAAJ,CAASO,aAArB;;MACA,IAAI;QAAA;;QACI,MAAMC,SAAS,gBAAGhB,GAAG,CAACQ,IAAP,uEAAG,UAAUS,wBAAV,CAAmC,CAAnC,CAAH,oFAAG,sBAAuCC,mBAAvC,CAA2D,CAA3D,CAAH,2DAAG,uBAA+DC,eAA/D,CAA+E,CAA/E,CAAlB;QACA,MAAMC,eAAe,GAAGJ,SAAS,CAACK,WAAlC;QACAjB,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYP,GAAG,CAACQ,IAAhB,EAAsBE,MAAlC,EAHJ,CAII;QACA;;QACA,IAAI,CAACV,GAAG,CAACQ,IAAJ,CAASS,wBAAd,EAAwC;UACpC7B,WAAW,CAAC,IAAD,CAAX;QACH,CAFD,MAEO;UACHF,eAAe,CAACkC,eAAD,CAAf;QACH;MACJ,CAXL,CAWM,MAAM;QACJlC,eAAe,CAAC,EAAD,CAAf;MACH;IACJ;;IACLF,UAAU,CAAC,KAAD,CAAV;EACH,CA7BD;;EAgCA,SAASsC,MAAT,CAAgBC,WAAhB,EAA6B;IACzBnE,KAAK,CAACoE,IAAN,CAAW,cAAX,EAA2BD,WAA3B,EACKE,IADL,CACUzB,GAAG,IAAI;MACT,MAAM;QAAE0B,IAAF;QAAQ5D;MAAR,IAAkBkC,GAAG,CAACQ,IAA5B;MACAzC,YAAY,CAAC4D,OAAb,CAAqB,OAArB,EAA8B7D,KAA9B;MACAC,YAAY,CAAC4D,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAA7B;MACApC,YAAY,CAACwC,aAAa,KAAK,EAC3B,GAAGA,aADwB;QAE3BJ,IAF2B;QAErB5D;MAFqB,CAAL,CAAd,CAAZ;IAIH,CATL,EAUKoC,KAVL,CAUWC,GAAG,IAAI4B,aAAa,CAAC5B,GAAG,CAAC6B,QAAJ,CAAaxB,IAAb,CAAkByB,MAAnB,CAV/B;EAWH;;EAED,SAASC,KAAT,CAAeX,WAAf,EAA4B;IACxBnE,KAAK,CAACoE,IAAN,CAAW,aAAX,EAA0BD,WAA1B,EACKE,IADL,CACUzB,GAAG,IAAI;MACT,MAAM;QAAE0B,IAAF;QAAQ5D;MAAR,IAAkBkC,GAAG,CAACQ,IAA5B;MACAzC,YAAY,CAAC4D,OAAb,CAAqB,OAArB,EAA8B7D,KAA9B;MACAC,YAAY,CAAC4D,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAA7B;MACAS,YAAY;MACZ7C,YAAY,CAACwC,aAAa,KAAK,EAC3B,GAAGA,aADwB;QAE3BJ,IAF2B;QAErB5D;MAFqB,CAAL,CAAd,CAAZ;IAIH,CAVL,EAWKoC,KAXL,CAWWC,GAAG,IAAI4B,aAAa,CAAC5B,GAAG,CAAC6B,QAAJ,CAAaxB,IAAb,CAAkByB,MAAnB,CAX/B;EAYH;;EAED,SAASG,MAAT,GAAkB;IACdrE,YAAY,CAACsE,UAAb,CAAwB,OAAxB;IACAtE,YAAY,CAACsE,UAAb,CAAwB,MAAxB;IACAtE,YAAY,CAACsE,UAAb,CAAwB,cAAxB;IACA/C,YAAY,CAAC;MACToC,IAAI,EAAE,EADG;MAET5D,KAAK,EAAE,EAFE;MAGTwE,KAAK,EAAE;IAHE,CAAD,CAAZ;EAKH;;EAED,SAASP,aAAT,CAAuBE,MAAvB,EAA+B;IAC3B3C,YAAY,CAACiD,SAAS,KAAK,EACvB,GAAGA,SADoB;MAEvBN;IAFuB,CAAL,CAAV,CAAZ;EAIH;;EAED,SAASO,YAAT,GAAwB;IACpBlD,YAAY,CAACiD,SAAS,KAAK,EACvB,GAAGA,SADoB;MAEvBN,MAAM,EAAE;IAFe,CAAL,CAAV,CAAZ;EAIH;;EAED,MAAMQ,UAAU,GAAIC,OAAD,IAAa;IAC5BtF,KAAK,CAACoE,IAAN,CAAW,SAAX,EAAsBkB,OAAtB,EACCjB,IADD,CACMzB,GAAG,IAAI;MACTI,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,GAAG,CAACQ,IAAlC,EADS,CAET;;MACA1B,eAAe,CAACyD,SAAS,IAAI;QACzBnC,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CL,GAAG,CAACQ,IAA9C;QACA,OAAO,CAAC,GAAG+B,SAAJ,EAAeG,OAAf,CAAP;MACH,CAHc,CAAf,CAHS,CAOT;IACH,CATD,EAUCxC,KAVD,CAUOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC6B,QAAJ,CAAaxB,IAAb,CAAkByB,MAA9B,CAVd;IAWA7B,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCxB,YAAhC;EACH,CAbD,CAvIyB,CAuJzB;;;EACA9B,WAAW,CAACsB,WAAD,EAAc,GAAd,EAAmBwB,aAAnB,CAAX;EACA9C,WAAW,CAACwB,UAAD,EAAa,GAAb,EAAkBuC,sBAAlB,CAAX,CAzJyB,CA2JzB;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EAEA;;EACA,MAAM6B,sBAAsB,GAAID,OAAD,IAAa;IACxC,IAAG5E,KAAH,EAAW;MACPN,SAAS,CAACgE,IAAV,CAAe,aAAf,EAA8BkB,OAA9B,EACKjB,IADL,CACUzB,GAAG,IAAI;QACTI,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDL,GAAG,CAACQ,IAArD,EADS,CAET;;QACA1B,eAAe,CAACyD,SAAS,IAAI;UACzB,OAAO,CAAC,GAAGA,SAAJ,EAAeG,OAAf,CAAP;QACF,CAFa,CAAf;MAGH,CAPL,EAQKxC,KARL,CAQWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC6B,QAAJ,CAAaxB,IAAb,CAAkByB,MAA9B,CARlB;IASH,CAVD,MAUO;MACC,MAAMW,WAAW,GAAG,CAAC,GAAG/D,YAAJ,EAAkB6D,OAAlB,CAApB;MACA3E,YAAY,CAAC4D,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAee,WAAf,CAArC;MACA9D,eAAe,CAAC8D,WAAD,CAAf;IACP;EACJ,CAhBD,CA5LyB,CA8MzB;;;EACA,MAAMC,UAAU,GAAG,MAAM;IACzB;IACI,IAAG/E,KAAH,EAAU;MACNN,SAAS,CAACyC,GAAV,CAAc,iBAAd,EACCwB,IADD,CACMzB,GAAG,IAAI;QACTlB,eAAe,CAACkB,GAAG,CAACQ,IAAL,CAAf;MACH,CAHD,EAICN,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC6B,QAAJ,CAAaxB,IAAb,CAAkByB,MAA9B,CAJd;IAKH,CAND,MAMO;MACHL,IAAI,CAACkB,KAAL,CAAW/E,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX;IACH;EACJ,CAXD;;EAaA,MAAM+E,aAAa,GAAIC,KAAD,IAAW;IAC7BxF,SAAS,CAACyF,MAAV,CAAkB,eAAcD,KAAM,EAAtC,EACKvB,IADL,CACUzB,GAAG,IAAI;MACTI,OAAO,CAACC,GAAR,CAAY2C,KAAZ;MACA5C,OAAO,CAACC,GAAR,CAAYxB,YAAY,CAACqE,MAAb,CAAoBC,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYJ,KAAvC,CAAZ;MACAlE,eAAe,CAACyD,SAAS,IAAIA,SAAS,CAACW,MAAV,CAAiBC,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYJ,KAApC,CAAd,CAAf;IACH,CALL,EAMK9C,KANL,CAMWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC6B,QAAJ,CAAaxB,IAAb,CAAkByB,MAA9B,CANlB;EAOH,CARD;;EAaA,SAASE,YAAT,GAAwB;IACpB3E,SAAS,CAACyC,GAAV,CAAc,iBAAd,EACKwB,IADL,CACUzB,GAAG,IAAIV,YAAY,CAACiD,SAAS,KAAK,EACpC,GAAGA,SADiC;MAEpCD,KAAK,EAAEtC,GAAG,CAACQ;IAFyB,CAAL,CAAV,CAD7B,EAKKN,KALL,CAKWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC6B,QAAJ,CAAaxB,IAAb,CAAkByB,MAA9B,CALlB;EAMH;;EAED,SAASoB,OAAT,CAAiBC,OAAjB,EAA0B;IACtB9F,SAAS,CAACgE,IAAV,CAAe,WAAf,EAA4B8B,OAA5B,EACK7B,IADL,CACUzB,GAAG,IAAI;MACTV,YAAY,CAACiD,SAAS,KAAK,EACvB,GAAGA,SADoB;QAEvBD,KAAK,EAAE,CAAC,GAAGC,SAAS,CAACD,KAAd,EAAqBtC,GAAG,CAACQ,IAAzB;MAFgB,CAAL,CAAV,CAAZ;IAIH,CANL,EAOKN,KAPL,CAOWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC6B,QAAJ,CAAaxB,IAAb,CAAkByB,MAA9B,CAPlB;EAQH;;EAEDhF,SAAS,CAAC,MAAM;IACZ2E,IAAI,CAACkB,KAAL,CAAW/E,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX;EACH,CAFQ,EAEN,CAACa,YAAD,EAAeuD,MAAf,CAFM,CAAT;EAIA,oBACI,QAAC,WAAD,CAAa,QAAb;IACI,KAAK,EAAE;MACH9D,cADG;MAEHD,WAFG;MAGHG,aAHG;MAIHD,UAJG;MAKHE,UALG;MAMHC,aANG;MAOHC,QAPG;MAQHC,WARG;MASHE,eATG;MAUHD,YAVG;MAWHE,SAXG;MAYHC,UAZG;MAaHyD,UAbG;MAcHI,UAdG;MAeH3D,eAfG;MAgBHD,YAhBG;MAiBH8D,aAjBG;MAkBHjC,sBAlBG;MAmBH3B,QAnBG;MAoBHC,WApBG;MAqBHuD,sBArBG;MAsBH,GAAGtD,SAtBA;MAuBHiC,MAvBG;MAwBHY,KAxBG;MAyBHE,MAzBG;MA0BHiB,OA1BG;MA2BHlB,YA3BG;MA4BHK,YA5BG;MA6BHhF;IA7BG,CADX;IAAA,UAiCKY,KAAK,CAACmF;EAjCX;IAAA;IAAA;IAAA;EAAA,QADJ;AAqCH;;GAtSQpF,Y;UAwJLpB,W,EACAA,W;;;KAzJKoB,Y;AAwST,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}