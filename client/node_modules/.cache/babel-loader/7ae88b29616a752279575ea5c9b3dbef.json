{"ast":null,"code":"var _jsxFileName = \"/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useDebounce } from \"../hooks/debounceHook\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrugContext = /*#__PURE__*/React.createContext();\nconst userAxios = axios.create();\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nfunction DrugProvider(props) {\n  _s();\n\n  const initState = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n    token: localStorage.getItem(\"token\") || \"\",\n    notes: [],\n    errMsg: \"\"\n  }; // console.log(\"initstate: \", selectedMeds)\n\n  const [userState, setUserState] = useState(initState);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [rxcuiQuery, setRxcuiQuery] = useState(\"\");\n  const [noMedNames, setNoMedNames] = useState(false);\n  const [medNames, setMedNames] = useState([]);\n  const [selectedMeds, setSelectedMeds] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [interactions, setInteractions] = useState([]);\n  const [noRxcuis, setNoRxcuis] = useState(false);\n\n  const prepareSearchQuery = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`;\n    return encodeURI(url);\n  };\n\n  const prepareCrossInteraction = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`;\n    return encodeURI(url);\n  };\n\n  const searchMedName = async () => {\n    if (!searchQuery || searchQuery.trim() === \"\") return;\n    setLoading(true);\n    setNoMedNames(false);\n    const URL = prepareSearchQuery(searchQuery);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      // console.log(\"Response: res.data\", res.data)\n      console.log(\"object length: \", Object.keys(res.data.drugGroup).length); // console.log(\"object: \", Object.keys(res.data.drugGroup))\n      // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n\n      const medData = res.data.drugGroup.conceptGroup;\n      Object.keys(res.data.drugGroup).length >= 2 ? setMedNames(medData[medData.length - 1].conceptProperties) : setNoMedNames(true);\n    }\n\n    setLoading(false);\n  };\n\n  const searchCrossInteraction = async () => {\n    if (!rxcuiQuery || rxcuiQuery.trim() === \"\") return;\n    setLoading(true);\n    setNoRxcuis(false);\n    const URL = prepareCrossInteraction(rxcuiQuery);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      console.log(res.data.nlmDisclaimer);\n\n      try {\n        var _res$data, _res$data$fullInterac, _res$data$fullInterac2;\n\n        const rxcuiData = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$fullInterac = _res$data.fullInteractionTypeGroup[0]) === null || _res$data$fullInterac === void 0 ? void 0 : (_res$data$fullInterac2 = _res$data$fullInterac.fullInteractionType[0]) === null || _res$data$fullInterac2 === void 0 ? void 0 : _res$data$fullInterac2.interactionPair[0];\n        const interactionData = rxcuiData.description;\n        console.log(Object.keys(res.data).length); // console.log(\"rxcuiData: \", rxcuiData)\n        // console.log(\"Interaction: \", interactionData)\n\n        if (!res.data.fullInteractionTypeGroup) {\n          setNoRxcuis(true);\n        } else {\n          setInteractions(interactionData);\n        }\n      } catch {\n        setInteractions(\"\");\n      }\n    }\n\n    setLoading(false);\n  };\n\n  const signup = credentials => {\n    axios.post(\"/auth/signup\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  };\n\n  const login = credentials => {\n    axios.post(\"/auth/login\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.removeItem(\"selectedMeds\");\n      getUserNotes();\n      getMedList();\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthErr(err.response.data.errMsg));\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"selectedMeds\");\n    setUserState({\n      user: {},\n      token: \"\",\n      notes: []\n    });\n    setSelectedMeds([]);\n    setInteractions([]);\n  };\n\n  const handleAuthErr = errMsg => {\n    setUserState(prevState => ({ ...prevState,\n      errMsg\n    }));\n  };\n\n  const resetAuthErr = () => {\n    setUserState(prevState => ({ ...prevState,\n      errMsg: \"\"\n    }));\n  };\n\n  const addMedList = newMeds => {\n    axios.post(\"/rxlist\", newMeds).then(res => {\n      console.log(\"i am res.data:\", res.data); // const myMedList = [...selectedMeds, newMeds]\n\n      setSelectedMeds(prevState => {\n        console.log(\"Saved into setSelectedMeds\", res.data);\n        return [...prevState, newMeds];\n      }); //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n    }).catch(err => console.log(err.response.data.errMsg));\n    console.log(\"context line 93:\", selectedMeds);\n  }; //this prevents the each keystroke of every keyword in the search\n\n\n  useDebounce(searchQuery, 750, searchMedName);\n  useDebounce(rxcuiQuery, 750, searchCrossInteraction); //trial useraxios user token route\n\n  const addMedListLocalStorage = newMeds => {\n    if (initState.token) {\n      userAxios.post(\"/api/rxlist\", newMeds).then(res => {\n        console.log(\"addMedListLocalStorage function :\", res.data); // const myMedList = [...selectedMeds, newMeds]\n\n        setSelectedMeds(prevState => {\n          return [...prevState, newMeds];\n        });\n      }).catch(err => console.log(err.response.data.errMsg));\n    } else {\n      const newSelected = [...selectedMeds, newMeds];\n      localStorage.setItem(\"selectedMeds\", JSON.stringify(newSelected));\n      setSelectedMeds(newSelected);\n    }\n  }; //trial getmedlist from localStorage\n\n\n  const getMedList = () => {\n    //    localStorage.getItem(\"selectedMeds\")\n    if (initState.token) {\n      userAxios.get(\"api/rxlist/user\").then(res => {\n        setSelectedMeds(res.data);\n      }).catch(err => console.log(err.response.data.errMsg));\n    } else {\n      JSON.parse(localStorage.getItem(\"selectedMeds\"));\n    }\n  };\n\n  const deleteMedList = medId => {\n    userAxios.delete(`/api/rxlist/${medId}`).then(res => {\n      console.log(medId);\n      console.log(selectedMeds.filter(med => med._id !== medId));\n      setSelectedMeds(prevState => prevState.filter(med => med._id !== medId));\n    }).catch(err => console.log(err.response.data.errMsg));\n  };\n\n  const getUserNotes = () => {\n    userAxios.get(\"/api/notes/user\").then(res => setUserState(prevState => ({ ...prevState,\n      notes: res.data\n    }))).catch(err => console.log(err.response.data.errMsg));\n  };\n\n  const addNote = newNote => {\n    userAxios.post(\"api/notes\", newNote).then(res => {\n      setUserState(prevState => ({ ...prevState,\n        notes: [...prevState.notes, res.data]\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  };\n\n  const deleteNote = noteId => {\n    userAxios.delete(`/api/notes/${noteId}`).then(res => {\n      console.log(noteId);\n      return setUserState(prevState => ({ ...prevState,\n        notes: [...prevState.notes.filter(note => {\n          console.log(\"remaining issue: \", note._id);\n          return note._id !== noteId;\n        })]\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  };\n\n  useEffect(() => {\n    JSON.parse(localStorage.getItem(\"selectedMeds\"));\n  }, [selectedMeds]);\n  return /*#__PURE__*/_jsxDEV(DrugContext.Provider, {\n    value: {\n      setSearchQuery,\n      searchQuery,\n      setRxcuiQuery,\n      rxcuiQuery,\n      noMedNames,\n      setNoMedNames,\n      medNames,\n      setMedNames,\n      setSelectedMeds,\n      selectedMeds,\n      isLoading,\n      setLoading,\n      addMedList,\n      getMedList,\n      setInteractions,\n      interactions,\n      deleteMedList,\n      searchCrossInteraction,\n      noRxcuis,\n      setNoRxcuis,\n      addMedListLocalStorage,\n      ...userState,\n      signup,\n      login,\n      logout,\n      addNote,\n      getUserNotes,\n      resetAuthErr,\n      deleteNote,\n      userAxios\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrugProvider, \"MPnw+nZM5z6ZBeFLMTKHoLmO0E4=\", false, function () {\n  return [useDebounce, useDebounce];\n});\n\n_c = DrugProvider;\nexport default DrugProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrugProvider\");","map":{"version":3,"names":["useDebounce","React","useEffect","useState","axios","DrugContext","createContext","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","DrugProvider","props","initState","user","JSON","parse","notes","errMsg","userState","setUserState","searchQuery","setSearchQuery","rxcuiQuery","setRxcuiQuery","noMedNames","setNoMedNames","medNames","setMedNames","selectedMeds","setSelectedMeds","isLoading","setLoading","interactions","setInteractions","noRxcuis","setNoRxcuis","prepareSearchQuery","query","url","encodeURI","prepareCrossInteraction","searchMedName","trim","URL","res","get","catch","err","console","log","Object","keys","data","drugGroup","length","medData","conceptGroup","conceptProperties","searchCrossInteraction","nlmDisclaimer","rxcuiData","fullInteractionTypeGroup","fullInteractionType","interactionPair","interactionData","description","signup","credentials","post","then","setItem","stringify","prevUserState","handleAuthErr","response","login","removeItem","getUserNotes","getMedList","logout","prevState","resetAuthErr","addMedList","newMeds","addMedListLocalStorage","newSelected","deleteMedList","medId","delete","filter","med","_id","addNote","newNote","deleteNote","noteId","note","children"],"sources":["/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js"],"sourcesContent":["import { useDebounce } from \"../hooks/debounceHook\"\nimport React, { useEffect, useState } from \"react\"\nimport axios from \"axios\"\n\nexport const DrugContext = React.createContext()\n\nconst userAxios = axios.create()\n\nuserAxios.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"token\")\n  config.headers.Authorization = `Bearer ${token}`\n  return config\n})\n\nfunction DrugProvider(props) {\n  const initState = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n    token: localStorage.getItem(\"token\") || \"\",\n    notes: [],\n    errMsg: \"\",\n  }\n  // console.log(\"initstate: \", selectedMeds)\n\n  const [userState, setUserState] = useState(initState)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [rxcuiQuery, setRxcuiQuery] = useState(\"\")\n  const [noMedNames, setNoMedNames] = useState(false)\n  const [medNames, setMedNames] = useState([])\n  const [selectedMeds, setSelectedMeds] = useState([])\n  const [isLoading, setLoading] = useState(false)\n  const [interactions, setInteractions] = useState([])\n  const [noRxcuis, setNoRxcuis] = useState(false)\n\n  const prepareSearchQuery = (query) => {\n    const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`\n    return encodeURI(url)\n  }\n\n  const prepareCrossInteraction = (query) => {\n    const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`\n    return encodeURI(url)\n  }\n\n  const searchMedName = async () => {\n    if (!searchQuery || searchQuery.trim() === \"\") return\n\n    setLoading(true)\n    setNoMedNames(false)\n\n    const URL = prepareSearchQuery(searchQuery)\n\n    const res = await axios.get(URL).catch((err) => {\n      console.log(\"Error: \", err)\n    })\n\n    if (res) {\n      // console.log(\"Response: res.data\", res.data)\n      console.log(\"object length: \", Object.keys(res.data.drugGroup).length)\n      // console.log(\"object: \", Object.keys(res.data.drugGroup))\n      // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n      const medData = res.data.drugGroup.conceptGroup\n      Object.keys(res.data.drugGroup).length >= 2\n        ? setMedNames(medData[medData.length - 1].conceptProperties)\n        : setNoMedNames(true)\n    }\n    setLoading(false)\n  }\n\n  const searchCrossInteraction = async () => {\n    if (!rxcuiQuery || rxcuiQuery.trim() === \"\") return\n    setLoading(true)\n    setNoRxcuis(false)\n\n    const URL = prepareCrossInteraction(rxcuiQuery)\n    const res = await axios.get(URL).catch((err) => {\n      console.log(\"Error: \", err)\n    })\n\n    if (res) {\n      console.log(res.data.nlmDisclaimer)\n      try {\n        const rxcuiData =\n          res.data?.fullInteractionTypeGroup[0]?.fullInteractionType[0]\n            ?.interactionPair[0]\n        const interactionData = rxcuiData.description\n        console.log(Object.keys(res.data).length)\n        // console.log(\"rxcuiData: \", rxcuiData)\n        // console.log(\"Interaction: \", interactionData)\n        if (!res.data.fullInteractionTypeGroup) {\n          setNoRxcuis(true)\n        } else {\n          setInteractions(interactionData)\n        }\n      } catch {\n        setInteractions(\"\")\n      }\n    }\n    setLoading(false)\n  }\n\n  const signup = (credentials) => {\n    axios\n      .post(\"/auth/signup\", credentials)\n      .then((res) => {\n        const { user, token } = res.data\n        localStorage.setItem(\"token\", token)\n        localStorage.setItem(\"user\", JSON.stringify(user))\n        setUserState((prevUserState) => ({\n          ...prevUserState,\n          user,\n          token,\n        }))\n      })\n      .catch((err) => handleAuthErr(err.response.data.errMsg))\n  }\n\n  const login = (credentials) => {\n    axios\n      .post(\"/auth/login\", credentials)\n      .then((res) => {\n        const { user, token } = res.data\n        localStorage.setItem(\"token\", token)\n        localStorage.setItem(\"user\", JSON.stringify(user))\n        localStorage.removeItem(\"selectedMeds\")\n        getUserNotes()\n        getMedList()\n        setUserState((prevUserState) => ({\n          ...prevUserState,\n          user,\n          token,\n        }))\n      })\n      .catch((err) => handleAuthErr(err.response.data.errMsg))\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n    localStorage.removeItem(\"selectedMeds\")\n    setUserState({\n      user: {},\n      token: \"\",\n      notes: [],\n    })\n    setSelectedMeds([])\n    setInteractions([])\n  }\n\n  const handleAuthErr = (errMsg) => {\n    setUserState((prevState) => ({\n      ...prevState,\n      errMsg,\n    }))\n  }\n\n  const resetAuthErr = () => {\n    setUserState((prevState) => ({\n      ...prevState,\n      errMsg: \"\",\n    }))\n  }\n\n  const addMedList = (newMeds) => {\n    axios\n      .post(\"/rxlist\", newMeds)\n      .then((res) => {\n        console.log(\"i am res.data:\", res.data)\n        // const myMedList = [...selectedMeds, newMeds]\n        setSelectedMeds((prevState) => {\n          console.log(\"Saved into setSelectedMeds\", res.data)\n          return [...prevState, newMeds]\n        })\n        //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n      })\n      .catch((err) => console.log(err.response.data.errMsg))\n    console.log(\"context line 93:\", selectedMeds)\n  }\n\n  //this prevents the each keystroke of every keyword in the search\n  useDebounce(searchQuery, 750, searchMedName)\n  useDebounce(rxcuiQuery, 750, searchCrossInteraction)\n\n  //trial useraxios user token route\n  const addMedListLocalStorage = (newMeds) => {\n    if (initState.token) {\n      userAxios\n        .post(\"/api/rxlist\", newMeds)\n        .then((res) => {\n          console.log(\"addMedListLocalStorage function :\", res.data)\n          // const myMedList = [...selectedMeds, newMeds]\n          setSelectedMeds((prevState) => {\n            return [...prevState, newMeds]\n          })\n        })\n        .catch((err) => console.log(err.response.data.errMsg))\n    } else {\n      const newSelected = [...selectedMeds, newMeds]\n      localStorage.setItem(\"selectedMeds\", JSON.stringify(newSelected))\n      setSelectedMeds(newSelected)\n    }\n  }\n\n  //trial getmedlist from localStorage\n  const getMedList = () => {\n    //    localStorage.getItem(\"selectedMeds\")\n    if (initState.token) {\n      userAxios\n        .get(\"api/rxlist/user\")\n        .then((res) => {\n          setSelectedMeds(res.data)\n        })\n        .catch((err) => console.log(err.response.data.errMsg))\n    } else {\n      JSON.parse(localStorage.getItem(\"selectedMeds\"))\n    }\n  }\n\n  const deleteMedList = (medId) => {\n    userAxios\n      .delete(`/api/rxlist/${medId}`)\n      .then((res) => {\n        console.log(medId)\n        console.log(selectedMeds.filter((med) => med._id !== medId))\n        setSelectedMeds((prevState) =>\n          prevState.filter((med) => med._id !== medId)\n        )\n      })\n      .catch((err) => console.log(err.response.data.errMsg))\n  }\n\n  const getUserNotes = () => {\n    userAxios\n      .get(\"/api/notes/user\")\n      .then((res) =>\n        setUserState((prevState) => ({\n          ...prevState,\n          notes: res.data,\n        }))\n      )\n      .catch((err) => console.log(err.response.data.errMsg))\n  }\n\n  const addNote = (newNote) => {\n    userAxios\n      .post(\"api/notes\", newNote)\n      .then((res) => {\n        setUserState((prevState) => ({\n          ...prevState,\n          notes: [...prevState.notes, res.data],\n        }))\n      })\n      .catch((err) => console.log(err.response.data.errMsg))\n  }\n\n  const deleteNote = (noteId) => {\n    userAxios\n      .delete(`/api/notes/${noteId}`)\n      .then((res) => {\n        console.log(noteId)\n        return setUserState((prevState) => ({\n          ...prevState,\n          notes: [\n            ...prevState.notes.filter((note) => {\n              console.log(\"remaining issue: \", note._id)\n              return note._id !== noteId\n            }),\n          ],\n        }))\n      })\n      .catch((err) => console.log(err.response.data.errMsg))\n  }\n\n  useEffect(() => {\n    JSON.parse(localStorage.getItem(\"selectedMeds\"))\n  }, [selectedMeds])\n\n  return (\n    <DrugContext.Provider\n      value={{\n        setSearchQuery,\n        searchQuery,\n        setRxcuiQuery,\n        rxcuiQuery,\n        noMedNames,\n        setNoMedNames,\n        medNames,\n        setMedNames,\n        setSelectedMeds,\n        selectedMeds,\n        isLoading,\n        setLoading,\n        addMedList,\n        getMedList,\n        setInteractions,\n        interactions,\n        deleteMedList,\n        searchCrossInteraction,\n        noRxcuis,\n        setNoRxcuis,\n        addMedListLocalStorage,\n        ...userState,\n        signup,\n        login,\n        logout,\n        addNote,\n        getUserNotes,\n        resetAuthErr,\n        deleteNote,\n        userAxios,\n      }}\n    >\n      {props.children}\n    </DrugContext.Provider>\n  )\n}\n\nexport default DrugProvider\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}