{"ast":null,"code":"var _jsxFileName = \"/Users/yong/development/assignments/module6/capstone/client/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { DrugContext } from '../context/DrugProvider.js';\nimport MedName from './MedName';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport default function Profile(props) {\n  _s();\n\n  const {\n    selectedMeds,\n    setSelectedMeds,\n    getSelectedMeds,\n    getMedList\n  } = useContext(DrugContext); // const mySelectedMedList = selectedMeds.map(med => <MedName {...med} key={med._id} />)\n\n  useEffect(() => {\n    console.log('useeffect ran');\n    getMedList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Issues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), selectedMeds.map(med => /*#__PURE__*/_createElement(MedName, { ...med,\n      key: med._id,\n      onClick: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 37\n      }\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"RPeiaXVNRZGGRBVrB92OFmbvGU0=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useContext","DrugContext","MedName","Profile","props","selectedMeds","setSelectedMeds","getSelectedMeds","getMedList","console","log","map","med","_id"],"sources":["/Users/yong/development/assignments/module6/capstone/client/src/components/Profile.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport { DrugContext } from '../context/DrugProvider.js'\nimport MedName from './MedName'\n\nexport default function Profile(props) {\n\n    const { selectedMeds, setSelectedMeds, getSelectedMeds, getMedList } = useContext(DrugContext)\n    // const mySelectedMedList = selectedMeds.map(med => <MedName {...med} key={med._id} />)\n\n\n    useEffect(() => {\n        console.log('useeffect ran')\n        getMedList()\n    }, [])\n\n\n    return (\n    \n        <div>\n            <h1>My Issues</h1>\n           {selectedMeds.map(med => <MedName {...med} key={med._id} onClick={null}/>)}\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EAEnC,MAAM;IAAEC,YAAF;IAAgBC,eAAhB;IAAiCC,eAAjC;IAAkDC;EAAlD,IAAiER,UAAU,CAACC,WAAD,CAAjF,CAFmC,CAGnC;;EAGAH,SAAS,CAAC,MAAM;IACZW,OAAO,CAACC,GAAR,CAAY,eAAZ;IACAF,UAAU;EACb,CAHQ,EAGN,EAHM,CAAT;EAMA,oBAEI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEIH,YAAY,CAACM,GAAb,CAAiBC,GAAG,iBAAI,eAAC,OAAD,OAAaA,GAAb;MAAkB,GAAG,EAAEA,GAAG,CAACC,GAA3B;MAAgC,OAAO,EAAE,IAAzC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAxB,CAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAOH;;GAnBuBV,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}