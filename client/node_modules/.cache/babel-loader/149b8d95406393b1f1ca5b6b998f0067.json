{"ast":null,"code":"var _jsxFileName = \"/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useDebounce } from '../hooks/debounceHook';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrugContext = /*#__PURE__*/React.createContext();\n\nfunction DrugProvider(props) {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchQuery2, setSearchQuery2] = useState(\"\");\n  const [noMedNames, setNoMedNames] = useState(false);\n  const [medNames, setMedNames] = useState([]);\n  const [selectedMeds, setSelectedMeds] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const prepareSearchQuery = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`;\n    return encodeURI(url);\n  };\n\n  const prepareCrossInteraction = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`;\n  };\n\n  const searchMedName = async () => {\n    if (!searchQuery || searchQuery.trim() === \"\") return;\n    setLoading(true);\n    setNoMedNames(false);\n    const URL = prepareSearchQuery(searchQuery);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      console.log(\"Response: res.data\", res.data);\n      console.log(\"object length: \", Object.keys(res.data.drugGroup).length); // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n\n      Object.keys(res.data.drugGroup).length >= 2 ? setMedNames(res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length - 1].conceptProperties) : setNoMedNames(true);\n    }\n\n    setLoading(false);\n  };\n\n  const searchCrossInteraction = () => {\n    if (!searchQuery2 || searchQuery2.trim() === \"\") return;\n    setLoading(true);\n    setNoMedNames(false);\n    const URL = prepareCrossInteraction(searchQuery2);\n    axios.get(URL).then(res => {\n      console.log(res.data);\n    });\n    setLoading(false).catch(err => console.log(err));\n  };\n\n  const addMedList = newMeds => {\n    axios.post(\"/rxlist\", newMeds).then(res => {\n      console.log(\"i am res.data:\", res.data); // const myMedList = [...selectedMeds, newMeds]\n\n      setSelectedMeds(prevState => {\n        console.log(\"Saved into setSelectedMeds\", res.data);\n        return [...prevState, newMeds];\n      }); //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n    }).catch(err => console.log(err.response.data.errMsg));\n    console.log(\"context line 55:\", selectedMeds);\n  }; //this prevents the each keystroke of every keyword in the search\n\n\n  useDebounce(searchQuery, 750, searchMedName);\n\n  const getMedList = () => {\n    axios.get(\"/rxlist\").then(res => {\n      setSelectedMeds(res.data);\n    }).catch(err => console.log(err.respojnse.data.errMsg));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DrugContext.Provider, {\n    value: {\n      setSearchQuery,\n      noMedNames,\n      setNoMedNames,\n      medNames,\n      setMedNames,\n      setSelectedMeds,\n      selectedMeds,\n      isLoading,\n      setLoading,\n      addMedList,\n      getMedList,\n      searchQuery2,\n      setSearchQuery2\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DrugProvider, \"0eHmyPzKrvby89OYChSOF6iqQro=\", false, function () {\n  return [useDebounce];\n});\n\n_c = DrugProvider;\nexport default DrugProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrugProvider\");","map":{"version":3,"names":["useDebounce","React","useState","axios","DrugContext","createContext","DrugProvider","props","searchQuery","setSearchQuery","searchQuery2","setSearchQuery2","noMedNames","setNoMedNames","medNames","setMedNames","selectedMeds","setSelectedMeds","isLoading","setLoading","prepareSearchQuery","query","url","encodeURI","prepareCrossInteraction","searchMedName","trim","URL","res","get","catch","err","console","log","data","Object","keys","drugGroup","length","conceptGroup","conceptProperties","searchCrossInteraction","then","addMedList","newMeds","post","prevState","response","errMsg","getMedList","respojnse","children"],"sources":["/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js"],"sourcesContent":["import { useDebounce } from '../hooks/debounceHook'\nimport React, { useState } from 'react'\nimport axios from 'axios'\nexport const DrugContext = React.createContext()\n\nfunction DrugProvider(props) {\n\n    const [searchQuery, setSearchQuery] = useState(\"\")\n    const [searchQuery2, setSearchQuery2] = useState(\"\")\n    const [noMedNames, setNoMedNames] = useState(false)\n    const [medNames, setMedNames] = useState([])\n    const [selectedMeds, setSelectedMeds] = useState([])\n    const [isLoading, setLoading] = useState(false)\n\n\n\n    const prepareSearchQuery = (query) => {\n        const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`\n        return encodeURI(url)\n    }\n\n    const prepareCrossInteraction = (query) => {\n        const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`\n    }\n\n    const searchMedName = async () => {\n        if(!searchQuery || searchQuery.trim() === \"\") return\n\n        setLoading(true)\n        setNoMedNames(false)\n\n        const URL = prepareSearchQuery(searchQuery)\n\n        const res = await axios.get(URL).catch((err) => {\n            console.log(\"Error: \", err)\n        })\n\n        if(res) {\n            console.log(\"Response: res.data\", res.data)\n            console.log(\"object length: \", Object.keys(res.data.drugGroup).length)\n            // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n            Object.keys(res.data.drugGroup).length >= 2 ? setMedNames(res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n            : setNoMedNames(true)\n            }\n        setLoading(false)\n    }\n\n    const searchCrossInteraction = () => {\n        if(!searchQuery2 || searchQuery2.trim() === \"\") return\n\n        setLoading(true)\n        setNoMedNames(false)\n\n        const URL = prepareCrossInteraction(searchQuery2)\n\n        axios.get(URL)\n            .then(res => {\n                console.log(res.data)\n            })\n            setLoading(false)\n            .catch(err => console.log(err))\n        }\n\n    const addMedList = (newMeds) => {\n        axios.post(\"/rxlist\", newMeds)\n        .then(res => {\n            console.log(\"i am res.data:\", res.data)\n            // const myMedList = [...selectedMeds, newMeds]\n            setSelectedMeds(prevState => {\n                console.log(\"Saved into setSelectedMeds\", res.data)\n                return [...prevState, newMeds]\n            })\n            //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n        })\n        .catch(err => console.log(err.response.data.errMsg))\n        console.log(\"context line 55:\", selectedMeds)\n    }\n    //this prevents the each keystroke of every keyword in the search\n    useDebounce(searchQuery, 750, searchMedName)\n   \n    const getMedList = () => {\n        axios.get(\"/rxlist\" )\n        .then(res => {\n            setSelectedMeds(res.data)\n        })\n        .catch(err => console.log(err.respojnse.data.errMsg))\n    }\n\n\n\n    return (\n        <DrugContext.Provider\n            value={{\n                setSearchQuery,\n                noMedNames,\n                setNoMedNames,\n                medNames,\n                setMedNames,\n                setSelectedMeds,\n                selectedMeds,\n                isLoading,\n                setLoading,\n                addMedList,\n                getMedList,\n                searchQuery2,\n                setSearchQuery2\n            }}\n        >\n            {props.children}\n        </DrugContext.Provider>\n    )\n}\n\nexport default DrugProvider"],"mappings":"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"},"metadata":{},"sourceType":"module"}