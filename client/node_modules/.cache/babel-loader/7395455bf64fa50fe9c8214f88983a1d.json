{"ast":null,"code":"var _jsxFileName = \"/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useDebounce } from '../hooks/debounceHook';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrugContext = /*#__PURE__*/React.createContext();\n\nfunction DrugProvider(props) {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchQuery2, setSearchQuery2] = useState(\"\");\n  const [noMedNames, setNoMedNames] = useState(false);\n  const [medNames, setMedNames] = useState([]);\n  const [selectedMeds, setSelectedMeds] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [interactions, setInteractions] = useState([]);\n\n  const prepareSearchQuery = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`;\n    return encodeURI(url);\n  };\n\n  const prepareCrossInteraction = query => {\n    const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`;\n    return encodeURI(url);\n  };\n\n  const searchMedName = async () => {\n    if (!searchQuery || searchQuery.trim() === \"\") return;\n    setLoading(true);\n    setNoMedNames(false);\n    const URL = prepareSearchQuery(searchQuery);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      // console.log(\"Response: res.data\", res.data)\n      // console.log(\"object length: \", Object.keys(res.data.drugGroup).length)\n      // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n      Object.keys(res.data.drugGroup).length >= 2 ? setMedNames(res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length - 1].conceptProperties) : setNoMedNames(true);\n    }\n\n    setLoading(false);\n  };\n\n  const searchCrossInteraction = async () => {\n    if (!searchQuery2 || searchQuery2.trim() === \"\") return;\n    setLoading(true);\n    setNoMedNames(false);\n    const URL = prepareCrossInteraction(searchQuery2);\n    const res = await axios.get(URL).catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (res) {\n      const interactionData = res.data.fullInteractionTypeGroup[0].fullInteractionType[0].interactionPair[0].interactionConcept[0];\n      console.log(\"Interaction: \", interactionData);\n      console.log(\"Interaction: \", Object.entries(interactionData).map(el => el.length - 1));\n      setInteractions(interactionData);\n    }\n\n    setLoading(false);\n  };\n\n  const addMedList = newMeds => {\n    axios.post(\"/rxlist\", newMeds).then(res => {\n      console.log(\"i am res.data:\", res.data); // const myMedList = [...selectedMeds, newMeds]\n\n      setSelectedMeds(prevState => {\n        console.log(\"Saved into setSelectedMeds\", res.data);\n        return [...prevState, newMeds];\n      }); //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n    }).catch(err => console.log(err.response.data.errMsg));\n    console.log(\"context line 55:\", selectedMeds);\n  }; //this prevents the each keystroke of every keyword in the search\n\n\n  useDebounce(searchQuery, 750, searchMedName);\n  useDebounce(searchQuery2, 750, searchCrossInteraction);\n\n  const getMedList = () => {\n    axios.get(\"/rxlist\").then(res => {\n      setSelectedMeds(res.data);\n    }).catch(err => console.log(err.respojnse.data.errMsg));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DrugContext.Provider, {\n    value: {\n      setSearchQuery,\n      noMedNames,\n      setNoMedNames,\n      medNames,\n      setMedNames,\n      setSelectedMeds,\n      selectedMeds,\n      isLoading,\n      setLoading,\n      addMedList,\n      getMedList,\n      searchQuery2,\n      setSearchQuery2,\n      setInteractions,\n      interactions\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DrugProvider, \"fDVj0O4KkEcxFO4S1xktnFOks2A=\", false, function () {\n  return [useDebounce, useDebounce];\n});\n\n_c = DrugProvider;\nexport default DrugProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrugProvider\");","map":{"version":3,"names":["useDebounce","React","useState","axios","DrugContext","createContext","DrugProvider","props","searchQuery","setSearchQuery","searchQuery2","setSearchQuery2","noMedNames","setNoMedNames","medNames","setMedNames","selectedMeds","setSelectedMeds","isLoading","setLoading","interactions","setInteractions","prepareSearchQuery","query","url","encodeURI","prepareCrossInteraction","searchMedName","trim","URL","res","get","catch","err","console","log","Object","keys","data","drugGroup","length","conceptGroup","conceptProperties","searchCrossInteraction","interactionData","fullInteractionTypeGroup","fullInteractionType","interactionPair","interactionConcept","entries","map","el","addMedList","newMeds","post","then","prevState","response","errMsg","getMedList","respojnse","children"],"sources":["/Users/yong/development/assignments/module6/capstone/client/src/context/DrugProvider.js"],"sourcesContent":["import { useDebounce } from '../hooks/debounceHook'\nimport React, { useState } from 'react'\nimport axios from 'axios'\nexport const DrugContext = React.createContext()\n\nfunction DrugProvider(props) {\n\n    const [searchQuery, setSearchQuery] = useState(\"\")\n    const [searchQuery2, setSearchQuery2] = useState(\"\")\n    const [noMedNames, setNoMedNames] = useState(false)\n    const [medNames, setMedNames] = useState([])\n    const [selectedMeds, setSelectedMeds] = useState([])\n    const [isLoading, setLoading] = useState(false)\n    const [interactions, setInteractions] = useState([])\n\n\n\n    const prepareSearchQuery = (query) => {\n        const url = `https://rxnav.nlm.nih.gov/REST/drugs.json?name=${query}`\n        return encodeURI(url)\n    }\n\n    const prepareCrossInteraction = (query) => {\n        const url = `https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${query}`\n        return encodeURI(url)\n    }\n\n    const searchMedName = async () => {\n        if(!searchQuery || searchQuery.trim() === \"\") return\n\n        setLoading(true)\n        setNoMedNames(false)\n\n        const URL = prepareSearchQuery(searchQuery)\n\n        const res = await axios.get(URL).catch((err) => {\n            console.log(\"Error: \", err)\n        })\n\n        if(res) {\n            // console.log(\"Response: res.data\", res.data)\n            // console.log(\"object length: \", Object.keys(res.data.drugGroup).length)\n            // console.log(\"drugGroup: \", res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n            Object.keys(res.data.drugGroup).length >= 2 ? setMedNames(res.data.drugGroup.conceptGroup[res.data.drugGroup.conceptGroup.length-1].conceptProperties)\n            : setNoMedNames(true)\n            }\n        setLoading(false)\n    }\n\n    const searchCrossInteraction = async () => {\n        if(!searchQuery2 || searchQuery2.trim() === \"\") return\n\n        setLoading(true)\n        setNoMedNames(false)\n\n        const URL = prepareCrossInteraction(searchQuery2)\n\n        const res = await axios.get(URL).catch((err) => {\n            console.log(\"Error: \", err)\n        })\n\n        if(res) {\n            const interactionData = res.data.fullInteractionTypeGroup[0].fullInteractionType[0].interactionPair[0].interactionConcept[0]\n            console.log(\"Interaction: \", interactionData)\n            console.log(\"Interaction: \", Object.entries(interactionData).map(el => el.length-1))\n            setInteractions(interactionData)\n            }\n        setLoading(false)\n    }\n\n    const addMedList = (newMeds) => {\n        axios.post(\"/rxlist\", newMeds)\n        .then(res => {\n            console.log(\"i am res.data:\", res.data)\n            // const myMedList = [...selectedMeds, newMeds]\n            setSelectedMeds(prevState => {\n                console.log(\"Saved into setSelectedMeds\", res.data)\n                return [...prevState, newMeds]\n            })\n            //if res.data in put in, the data delay of 1 is visible for selectedMeds; newMeds is direct\n        })\n        .catch(err => console.log(err.response.data.errMsg))\n        console.log(\"context line 55:\", selectedMeds)\n    }\n    //this prevents the each keystroke of every keyword in the search\n    useDebounce(searchQuery, 750, searchMedName)\n    useDebounce(searchQuery2, 750, searchCrossInteraction)\n   \n    const getMedList = () => {\n        axios.get(\"/rxlist\" )\n        .then(res => {\n            setSelectedMeds(res.data)\n        })\n        .catch(err => console.log(err.respojnse.data.errMsg))\n    }\n\n\n\n    return (\n        <DrugContext.Provider\n            value={{\n                setSearchQuery,\n                noMedNames,\n                setNoMedNames,\n                medNames,\n                setMedNames,\n                setSelectedMeds,\n                selectedMeds,\n                isLoading,\n                setLoading,\n                addMedList,\n                getMedList,\n                searchQuery2,\n                setSearchQuery2,\n                setInteractions,\n                interactions\n            }}\n        >\n            {props.children}\n        </DrugContext.Provider>\n    )\n}\n\nexport default DrugProvider"],"mappings":"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"},"metadata":{},"sourceType":"module"}